{"version":3,"sources":["components/Header.js","components/Mapa.js","models/Cliente.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sair","console","log","state","react_default","a","createElement","className","aria-hidden","onClick","Component","Mapa","Map","target","layers","TileLayer","source","OSM","view","View","center","zoom","id","Cliente","fetch","then","response","json","data","catch","error","Sidebar","retry","setState","styleSidebar","width","sortList","sortDirection","clientes","sort","b","nome","reverse","search","event","qtdeFaz","cidade","uf","getClientes","height","window","innerHeight","style","type","placeholder","onChange","map","c","i","key","App","Header_Header","Mapa_Mapa","Sidebar_Sidebar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98d59864.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Header extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {}        \n    }\n\n    sair = () => console.log(\"SAIR...\")\n\n    render() {\n        return (\n            <div className=\"nav\">                \n                <label className=\"title\">Agropragueiro</label>                \n                <div className=\"nav-itens\"></div>\n                <i className=\"fa fa-sign-out signout\" \n                    aria-hidden=\"true\" onClick={this.sair}></i>                                \n            </div>\n        )\n    }\n}     ","import React, { Component } from 'react'\nimport { Map, View } from 'ol'\nimport TileLayer from 'ol/layer/Tile'\nimport OSM from 'ol/source/OSM'\nimport 'ol/ol.css'\n\nexport default class Mapa extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    componentDidMount() {\n        new Map({\n            target: 'map',\n            layers: [\n                new TileLayer({\n                    source: new OSM()\n                })\n            ],\n            view: new View({\n                center: [-5277700.302744754, -2610167.2933163773],\n                zoom: 4\n            })\n        })\n    }\n\n    render() {\n        return (            \n            <div id=\"map\" className=\"map\"></div>                        \n        )\n    }\n}     ","export default class Cliente {\n\n    static getClientes() {        \n        fetch('http://localhost:4000/clientes')\n        .then(response => response.json())\n        .then(data => console.log(data))\n        .catch(error => console.log(error, 'erro ao buscar dados'))\n    }\n}","import React, { Component } from 'react'\nimport Cliente from '../models/Cliente'\n\nexport default class Sidebar extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            clientes: [\n                {nome: 'AGROPIRA', qtdeFaz: 10, cidade: 'Piracicaba', uf: 'São Paulo'},\n                {nome: 'AGROSANCA', qtdeFaz: 20, cidade: 'Uberlândia', uf: 'Minas Gerais'},\n                {nome: 'ROCINHA I', qtdeFaz: 30, cidade: 'Uberlândia', uf: 'Minas Gerais'},\n                {nome: 'ROCINHA II', qtdeFaz: 30, cidade: 'Uberlândia', uf: 'Minas Gerais'},\n                {nome: 'ROCINHA III', qtdeFaz: 30, cidade: 'Uberlândia', uf: 'Minas Gerais'}\n            ],\n            sortDirection: 'asc',\n            styleSidebar: {\n                width: '30%'\n            },\n            retry: false \n        }\n    }\n\n    componentDidMount() {\n        Cliente.getClientes()\n    }\n\n    retry = () => {\n        this.setState({ retry: !this.state.retry })\n        let styleSidebar = {\n            width: ''\n        }\n        if (this.state.retry) styleSidebar.width = '30%'\n        else styleSidebar.width = '5%'\n        \n        this.setState({ styleSidebar })\n    }\n\n    sortList = () => {\n        let sortDirection = ''        \n        let clientes = this.state.clientes\n        if (this.state.sortDirection === 'asc') {\n            clientes.sort(function(a,b) {\n                if (a.nome < b.nome) return 1\n                if (a.nome > b.nome) return -1\n                return 0\n            })\n            sortDirection = 'desc'\n        } else {\n            clientes = this.state.clientes.reverse()\n            sortDirection = 'asc'\n        }\n        this.setState({ clientes, sortDirection })                \n    }    \n\n    search = (event) => {\n        // const searchText = event.target.value.toUpperCase()                           \n        //  this.state.clientes = this.state.clientes.map(c => {            \n        //     if (c.nome.toUpperCase().indexOf(searchText) !== -1) {                \n        //         return c\n        //     }\n        // })    \n    }\n\n    render() {\n        const height = window.innerHeight - 150        \n        return (\n            <div className=\"sidebar\" style={this.state.styleSidebar}>\n                <div className=\"header-sidebar\">  \n                    {!this.state.retry ? \n                        <input type=\"text\" className=\"input\" placeholder=\"Pesquisar...\"\n                            onChange={this.search} /> : null} \n                    {!this.state.retry ?             \n                        this.state.sortDirection === 'asc' ? \n                            <i className=\"fa fa-2x fa-sort-alpha-desc retry\" \n                                aria-hidden=\"true\" onClick={this.sortList}></i> :                    \n                            <i className=\"fa fa-2x fa-sort-alpha-asc retry\" \n                                aria-hidden=\"true\" onClick={this.sortList}></i>                        \n                    : null}\n                    <i className=\"fa fa-2x fa-exchange retry\"\n                        aria-hidden=\"true\" onClick={this.retry}></i>\n                </div>\n                {!this.state.retry ? \n                <div className=\"cards\" style={{height: height + 'px'}}>    \n                    {this.state.clientes.map((c, i) => {\n                        return (\n                            <div key={i} className=\"card\">\n                                <h4>Cliente: {c.nome}</h4>\n                                <h4>Qtde fazendas: {c.qtdeFaz}</h4>\n                                <h4>Cidade: {c.cidade} | UF: {c.uf}</h4>\n                            </div>\n                        )                        \n                    })}                    \n                </div>\n                : null }\n            </div>\n        )\n    }\n}     ","import React, { Component } from 'react'\nimport Header from './components/Header'\nimport Mapa from './components/Mapa'\nimport Sidebar from './components/Sidebar'\nimport './App.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Header />\n                <Mapa />\n                <Sidebar />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}